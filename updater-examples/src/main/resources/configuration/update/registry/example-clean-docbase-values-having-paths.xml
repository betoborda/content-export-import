<?xml version="1.0" encoding="UTF-8"?>
<sv:node sv:name="Example - Clean Hippo Mirror Docbase Values Having Paths" xmlns:sv="http://www.jcp.org/jcr/sv/1.0">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:updaterinfo</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:batchsize" sv:type="Long">
    <sv:value>10</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:description" sv:type="String">
    <sv:value>A demo script to clean interim hippo:docbase values of Hippo Mirror nodes having paths instead of UUIDs.</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
    <sv:value>false</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:parameters" sv:type="String">
    <sv:value></sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:query" sv:type="String">
    <sv:value>//element(*)[jcr:like(@hippo:docbase,'/content/%')]</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:script" sv:type="String">
    <sv:value>package org.hippoecm.frontend.plugins.cms.admin.updater&#xd;
&#xd;
import java.io.*&#xd;
import javax.jcr.*&#xd;
import org.apache.commons.lang.*&#xd;
import org.onehippo.repository.update.BaseNodeUpdateVisitor&#xd;
&#xd;
class CleaningDocbasesHavingPathsUpdateVisitor extends BaseNodeUpdateVisitor {&#xd;
&#xd;
  boolean doUpdate(Node node) {&#xd;
    log.debug "Visiting ${node.path}"&#xd;
    def docbasePath = node.getProperty("hippo:docbase").getString()&#xd;
    def docbase&#xd;
&#xd;
    if (StringUtils.startsWith(docbasePath, "/") &amp;&amp; node.session.nodeExists(docbasePath)) {&#xd;
      docbase = node.session.getNode(docbasePath).getIdentifier()&#xd;
      node.setProperty("hippo:docbase", docbase)&#xd;
      log.info "Reset ${node.path}/hippo:docbase to '${docbase}' from '${docbasePath}'."&#xd;
      return true&#xd;
    }
&#xd;
    return false&#xd;
&#xd;
  }&#xd;
&#xd;
  boolean undoUpdate(Node node) {&#xd;
    throw new UnsupportedOperationException('Updater does not implement undoUpdate method')&#xd;
  }&#xd;
&#xd;
  void destroy() {&#xd;
  }&#xd;
&#xd;
}</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:throttle" sv:type="Long">
    <sv:value>1000</sv:value>
  </sv:property>
</sv:node>
